name: Code Quality

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  quality-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20.x"
        cache: 'npm'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        cd screencastcms
        pip install -r requirements.txt
        pip install flake8 black isort
    
    - name: Install Node.js dependencies
      run: npm ci
    
    - name: Python Code Quality Checks
      run: |
        cd screencastcms
        echo "üîç Running Python linting with flake8..."
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "‚ö†Ô∏è Some linting issues found"
        
        echo "üîç Checking Python import sorting..."
        isort . --check-only --diff || echo "‚ö†Ô∏è Import sorting issues found"
        
        echo "üîç Checking Python code formatting..."
        black . --check --diff || echo "‚ö†Ô∏è Code formatting issues found"
    
    - name: JavaScript Code Quality Checks
      run: |
        echo "üîç Checking JavaScript syntax..."
        node -c index.js
        
        echo "üîç Checking for common issues..."
        # Check for console.log statements (should be minimal in production)
        if grep -r "console\.log" index.js; then
          echo "‚ö†Ô∏è Found console.log statements - consider using proper logging"
        else
          echo "‚úÖ No console.log statements found"
        fi
        
        # Check for TODO comments
        if grep -r "TODO\|FIXME\|XXX" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "‚ö†Ô∏è Found TODO/FIXME comments"
        else
          echo "‚úÖ No TODO/FIXME comments found"
        fi
    
    - name: File Structure Validation
      run: |
        echo "üîç Validating project structure..."
        
        # Check for required files
        required_files=("package.json" "index.js" "README.md" ".gitignore")
        for file in "${required_files[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file exists"
          else
            echo "‚ùå $file is missing"
            exit 1
          fi
        done
        
        # Check for required directories
        required_dirs=("views" "public" "screencastcms" ".github/workflows")
        for dir in "${required_dirs[@]}"; do
          if [ -d "$dir" ]; then
            echo "‚úÖ $dir directory exists"
          else
            echo "‚ùå $dir directory is missing"
            exit 1
          fi
        done
        
        echo "‚úÖ Project structure validation passed"
    
    - name: Security Check
      run: |
        echo "üîç Running basic security checks..."
        
        # Check for hardcoded secrets (basic patterns)
        if grep -r -i "password\|secret\|key\|token" . --exclude-dir=node_modules --exclude-dir=.git --exclude="*.md" --exclude="*.yml" | grep -v "SECRET_KEY.*django-insecure"; then
          echo "‚ö†Ô∏è Potential hardcoded secrets found - please review"
        else
          echo "‚úÖ No obvious hardcoded secrets found"
        fi
        
        # Check npm audit
        npm audit --audit-level=moderate || echo "‚ö†Ô∏è npm audit found some issues"
        
        echo "‚úÖ Basic security checks completed"
